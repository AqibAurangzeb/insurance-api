// <auto-generated />
using System;
using Insurance.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Insurance.DataAccess.Migrations
{
    [DbContext(typeof(InsuranceDbContext))]
    [Migration("20230704005639_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Insurance.Domain.Entities.ClaimType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("ClaimType", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Burglary and Theft"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Auto Accident"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Fire"
                        });
                });

            modelBuilder.Entity("Insurance.Domain.Entities.Claims", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    b.Property<string>("AssuredName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("AssuredName");

                    b.Property<DateTime>("ClaimDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ClaimDate");

                    b.Property<bool>("Closed")
                        .HasColumnType("bit")
                        .HasColumnName("Closed");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyId");

                    b.Property<decimal>("IncurredLoss")
                        .HasPrecision(15, 2)
                        .HasColumnType("decimal(15,2)")
                        .HasColumnName("IncurredLoss");

                    b.Property<DateTime>("LossDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("LossDate");

                    b.Property<string>("Ucr")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("UCR");

                    b.HasKey("Id");

                    b.ToTable("Claims", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AssuredName = "Aqib A",
                            ClaimDate = new DateTime(2018, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Closed = true,
                            CompanyId = 1,
                            IncurredLoss = 2500m,
                            LossDate = new DateTime(2018, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Ucr = "ABCD"
                        });
                });

            modelBuilder.Entity("Insurance.Domain.Entities.Company", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("Active");

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Address1");

                    b.Property<string>("Address2")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Address2");

                    b.Property<string>("Address3")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Address3");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Country");

                    b.Property<DateTime>("InsuranceEndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("InsuranceEndDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Name");

                    b.Property<string>("Postcode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Postcode");

                    b.HasKey("Id");

                    b.ToTable("Company", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            Address1 = "24 Water Lane",
                            Address2 = "25 Water Lane",
                            Address3 = "26 Water Lane",
                            Country = "UK",
                            InsuranceEndDate = new DateTime(2023, 12, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Aqib LTD",
                            Postcode = "LS5 5ST"
                        },
                        new
                        {
                            Id = 2,
                            Active = false,
                            Address1 = "34 Fire Lane",
                            Address2 = "35 Fire Lane",
                            Address3 = "36 Fire Lane",
                            Country = "Netherlands",
                            InsuranceEndDate = new DateTime(2022, 12, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Biqa LTD",
                            Postcode = "LS7 2ST"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
